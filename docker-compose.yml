version: '3.5'

services:
  todo-app-db:
    container_name: todo-app-db
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=todo-app-db
    volumes:
       - todo-app-db-data:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - nat
    restart: unless-stopped

  rabbitmq:
    image: masstransit/rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    restart: always
    networks:
      - nat

  user-service:
    depends_on:
      todo-app-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    container_name: user-service
    ports:
      - "3000:3000"
    build:
      context: .
      dockerfile: Services/UserService/UserService.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:3000
    networks:
      - nat

  todo-service:
    depends_on:
      todo-app-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    container_name: todo-service
    ports:
      - "3002:3002"
    build:
      context: .
      dockerfile: Services/TodoService/TodoService.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:3002
    networks:
      - nat

networks:
  nat:
    driver: bridge

volumes:
    todo-app-db-data:
    rabbitmq: